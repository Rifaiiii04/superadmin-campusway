// VirtualizedQuestionTable.jsx - Fixed Version
import React from 'react';

// Gunakan react-window dari global variable yang sudah di-load dari CDN
const ReactWindow = window.ReactWindow;

const VirtualizedQuestionTable = ({ questions, onEdit, onDelete }) => {
  if (!ReactWindow) {
    return (
      <div style={{ padding: '20px', textAlign: 'center', color: '#666' }}>
        <p>Virtualized table not available - Loading fallback...</p>
        <div style={{ marginTop: '10px' }}>
          {questions && questions.slice(0, 10).map((question, index) => (
            <div key={index} style={{ 
              padding: '10px', 
              border: '1px solid #ddd', 
              marginBottom: '5px',
              borderRadius: '4px'
            }}>
              {question.question_text || `Question ${index + 1}`}
            </div>
          ))}
        </div>
      </div>
    );
  }

  const { FixedSizeList: List } = ReactWindow;

  const Row = ({ index, style }) => {
    const question = questions[index];
    return (
      <div style={style}>
        <div style={{
          padding: '10px',
          borderBottom: '1px solid #eee',
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center'
        }}>
          <div style={{ flex: 1 }}>
            <div style={{ fontWeight: 'bold', marginBottom: '5px' }}>
              {question.question_text || `Question ${index + 1}`}
            </div>
            <div style={{ fontSize: '12px', color: '#666' }}>
              Type: {question.type} | Difficulty: {question.difficulty}
            </div>
          </div>
          <div>
            <button 
              onClick={() => onEdit(question)}
              style={{ marginRight: '5px', padding: '5px 10px' }}
            >
              Edit
            </button>
            <button 
              onClick={() => onDelete(question.id)}
              style={{ padding: '5px 10px', background: '#dc3545', color: 'white' }}
            >
              Delete
            </button>
          </div>
        </div>
      </div>
    );
  };

  return (
    <List
      height={400}
      itemCount={questions.length}
      itemSize={80}
      width="100%"
    >
      {Row}
    </List>
  );
};

export default VirtualizedQuestionTable;
